# This file is sourced by the default .bashrc
# It should contain only bash-specific config
# Other config should go into .aliases

source ~/.aliases

# Reomove UUIDs, optionally prefixed by a dash, from the hostname
# -s removes .local from $HOSTNAME
#_human_hostname=$(hostname -s | sed 's/-\?[0-9a-f]\{8\}-[0-9a-f]\{4\}-[0-9a-f]\{4\}-[0-9a-f]\{4\}-[0-9a-f]\{12\}//')
#_git_branch() {
#    branch=$(git rev-parse --abbrev-ref HEAD 2>/dev/null)
#    echo ${branch}${branch:+" "} # "alternate value", used to add a space only if branch is nonempty
#}
#_print_if_nonzero() {
#    local code
#    code=${1:-0} # handle missing argument
#    code=${code//\"/} # handle string with quotes
#    if [[ "$code" =~ ^[0-9]+$ ]] && (( code != 0 )); then
#        echo "$code "
#    fi
#}
#PROMPT_COMMAND='_exit_status=$?' # This runs before $PS1 is evaluated, saving the exit status
## Single quotes cause this to be reevaluated each prompt, to keep branch up to date
#export PS1='\[\e[1;36m\]\u@$_human_hostname \[\e[m\e[1;32m\]\w \[\e[m\e[1;33m\]$(_git_branch)\[\e[m\e[1;35m\]$(_print_if_nonzero $_exit_status)\[\e[m\]\n$ '


# Strip UUIDs (and leading dash) from the hostname (useful for containers)
# -s removes .local from $HOSTNAME
_human_hostname=$(hostname -s | sed 's/-\?[0-9a-f]\{8\}-[0-9a-f]\{4\}-[0-9a-f]\{4\}-[0-9a-f]\{4\}-[0-9a-f]\{12\}//')

# Print the current Git branch name followed by a space, if present
_git_branch() {
    branch=$(git rev-parse --abbrev-ref HEAD 2>/dev/null)
    echo "${branch}${branch:+" "}"
}

# Print the exit status of the last command, but only if nonzero
_print_if_nonzero() {
    code=${1:-0} # handle missing argument
    code=${code//\"/} # handle string with quotes
    # If it's a valid number and nonzero, print it
    if [[ "$code" =~ ^[0-9]+$ ]] && (( code != 0 )); then
        echo "$code "
    fi
}

# Build dynamic parts of the prompt on each command
PROMPT_COMMAND='
  _exit_status=$?;
  _ps1_git=$(_git_branch);
  _ps1_code=$(_print_if_nonzero "$_exit_status");
'

# Prompt string â€” single quotes to be evaluated lazily at display time
# user@hostname current-dir [git-branch] [nonzero-exit-code if any]
export PS1='\[\e[1;36m\]\u@'"$_human_hostname"' \
\[\e[m\e[1;32m\]\w \
\[\e[m\e[1;33m\]$_ps1_git\
\[\e[m\e[1;35m\]$_ps1_code\
\[\e[m\n\$ '

# Up arrow history searching
bind '"\e[A": history-search-backward'
